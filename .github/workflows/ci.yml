name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Configure git
        run: git config --global init.defaultBranch main

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npm run typecheck

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check || true # Don't fail on formatting issues

      - name: Build packages
        run: npm run build --workspaces --if-present

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Configure git
        run: git config --global init.defaultBranch main

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build --workspaces --if-present

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        # v5 supports tokenless uploads for public repos
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Configure git
        run: git config --global init.defaultBranch main

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: npm audit --omit=dev
        continue-on-error: true # Don't fail on vulnerabilities

      - name: Run Snyk to check for vulnerabilities
        if: false # Disabled to avoid authentication errors
        uses: snyk/actions/node@master
        continue-on-error: true # Don't fail the build on vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    name: Build & Validate
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Configure git
        run: git config --global init.defaultBranch main

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build main project
        run: npm run build

      - name: Build @wireframe/core
        run: |
          cd packages/core
          npm install
          npm run build
          echo "‚úÖ Core bundle size: $(du -sh dist/index.js | cut -f1)"

      - name: Validate zero warnings
        run: |
          echo "üîç Checking for warnings..."
          npm run lint 2>&1 | tee lint-output.txt
          if grep -q "warning" lint-output.txt; then
            echo "‚ùå Warnings found! Zero warning policy violated."
            exit 1
          fi
          echo "‚úÖ No warnings - Zero warning policy maintained!"

      - name: Validate bundle size
        run: |
          cd packages/core
          if [ -f dist/index.js ]; then
            SIZE=$(stat -f%z dist/index.js 2>/dev/null || stat -c%s dist/index.js)
            if [ $SIZE -gt 102400 ]; then
              echo "‚ùå Core bundle size exceeds 100KB limit!"
              exit 1
            fi
            echo "‚úÖ Core bundle size: $((SIZE/1024))KB (< 100KB target)"
          fi

  # Deployment steps removed from CI workflow
  # Deploy functionality is now in a separate deploy.yml workflow
  # This keeps the CI pipeline focused on testing and validation
